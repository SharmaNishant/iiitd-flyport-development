/**************************************************************
 * HTTPPrint.h
 * Provides callback headers and resolution for user's custom
 * HTTP Application.
 * 
 * This file is automatically generated by the MPFS Utility
 * ALL MODIFICATIONS WILL BE OVERWRITTEN BY THE MPFS GENERATOR
 **************************************************************/

#ifndef __HTTPPRINT_H
#define __HTTPPRINT_H

#include "TCPIP Stack/TCPIP.h"

#if defined(STACK_USE_HTTP2_SERVER)

extern HTTP_CONN curHTTP;
extern HTTP_STUB httpStubs[MAX_HTTP_CONNECTIONS];
extern BYTE curHTTPID;

void HTTPPrint(DWORD callbackID);
void HTTPPrint_SPERIOD(void);
void HTTPPrint_PPERIOD(void);
void HTTPPrint_APIKEY(void);
void HTTPPrint_SERVERIP(void);
void HTTPPrint_SERVERPORT(void);
void HTTPPrint_SERVERURL(void);
void HTTPPrint_IPADDR(void);
void HTTPPrint_SUBNET(void);
void HTTPPrint_GATEWAY(void);
void HTTPPrint_DNS1(void);
void HTTPPrint_DNS2(void);
void HTTPPrint_LIGHT(void);
void HTTPPrint_TEMP(void);
void HTTPPrint_PIR(void);
void HTTPPrint_DEVICENAME(void);
void HTTPPrint_LOCATION(void);
//void HTTPPrint_SSID(void);

void HTTPPrint(DWORD callbackID)
{
	switch(callbackID)
	{
        case 0x0000000f:
			HTTPPrint_SPERIOD();
			break;
        case 0x00000010:
			HTTPPrint_PPERIOD();
			break;
        case 0x00000011:
			HTTPPrint_APIKEY();
			break;
        case 0x00000012:
			HTTPPrint_SERVERIP();
			break;
        case 0x00000013:
			HTTPPrint_SERVERPORT();
			break;
        case 0x00000014:
			HTTPPrint_SERVERURL();
			break;
        case 0x00000015:
			HTTPPrint_IPADDR();
			break;
        case 0x00000016:
			HTTPPrint_SUBNET();
			break;
        case 0x00000017:
			HTTPPrint_GATEWAY();
			break;
        case 0x00000018:
			HTTPPrint_DNS1();
			break;
        case 0x00000019:
			HTTPPrint_DNS2();
			break;
        case 0x0000001a:
			HTTPPrint_LIGHT();
			break;
        case 0x0000001b:
			HTTPPrint_TEMP();
			break;
        case 0x0000001c:
			HTTPPrint_PIR();
			break;
        case 0x0000001d:
			HTTPPrint_DEVICENAME();
			break;
        case 0x0000001e:
			HTTPPrint_LOCATION();
			break;
        /*case 0x0000001f:
			HTTPPrint_SSID();
			break;*/
		default:
			// Output notification for undefined values
			TCPPutROMArray(sktHTTP, (ROM BYTE*)"!DEF", 4);
	}

	return;
}

void HTTPPrint_(void)
{
	TCPPut(sktHTTP, '~');
	return;
}

#endif

#endif
